https://ko.javascript.info/destructuring-assignment

# 구조 분해 할당
객체나 배열을 변수로 '분해'할 수 있게 해주는 문법.

## 배열 분해하기
```javascript
let arr = ["Bora", "Lee"];

// 구조 분해 할당을 이용해 firstName엔 arr[0]을,
// surname엔 arr[1]을 할당
let [firstName, surname] = arr;

console.log(firstName); // Bora
console.log(surname); // Lee

// split 같은 반환값이 배열인 메서드도 활용 가능
let [firstName, surname] = "Bora Lee".split(' ');
```

## '...'로 나머지 요소 가져오기
배열 앞쪽에 위치한 몇개의 값만 사용하고 나머지 값들을 한데 모아서 저장하고 싶은 경우엔 점 세개를 붙인 매개변수 `...`를 하나를 추가하면 나머지 요소를 가져올 수 있음.
```javascript
let [name1, name2, ...rest] = ["Julius", "Caesar", "Consul", "of the Roman Republic"];

console.log(name1); // Julius
console.log(name2); //Casear

// `rest`는 배열입니다.
console.log(rest[0]); // Counsul
console.log(rest[1]); // of the Roman Republic
console.log(rest.length); // 2
```
`rest`는 나머지 배열 요소들이 저장된 새로운 배열임. `rest`대신 다른이름 사용 가능한데 `...`와 변수가 가장 마지막에 위치해야되는건 지켜야함!

## 기본값
할당하고자 하는 변수의 개수가 분해하고자 하는 배열의 길이보다 크더라도 에러 발생하지 않음. 할당값이 없으면 undefined로 취급됨.
```javascript
let [firstName, surname] = [];

console.log(firstName); // undefined
console.log(surname); // undefined

// '='을 이용하면 할당할 값이 없을때 기본값 설정 가능
let [name = "Guest", surname = "Anonymous"] = [];

console.log(name); // Guest
console.log(surname); // Anonymous

// 값이 제공되지 않은 prompt 함수만 호출되므로 name에 대한 prompt함수만 호출됨.
// name의 prompt만 실행됨
let [surname = prompt('성을 입력하세요.'), name = prompt('이름을 입력하세요.')] = ["김"];

alert(surname); // 김 (배열에서 받아온 값)
alert(name);    // prompt에서 받아온 값
```

## 객체 분해하기
구조 분해 할당으로 객체도 분해 가능. 할당연산자 우측엔 분해하고자 하는 객체를, 좌측엔 상응하는 객체 프로퍼티의 '패턴'을 넣음
```javascript
let {car1, var2} = {var1:..., var2:...}

// 좌측 패턴에 콜론을 사용하면 원하는 변수에 프로퍼티 저장 가능.
let options = {
  title: "Menu",
  width: 100,
  height: 200,
};

// {객체 프로퍼티 : 목표 변수}
let {width: w, height: h, title} = options;

console.log(title); // Main
console.log(w); //100
console.log(h); //200
```

## 나머지 패턴 `...`

